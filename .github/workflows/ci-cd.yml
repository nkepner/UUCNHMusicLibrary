# üê≥ Building docker images
# üéºüéµüé∂üéπüé∑üéß

name: Test CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AUTH_SERVICE_IMAGE: "musiclibrary/auth_service"
  SONG_SERVICE_IMAGE: "musiclibrary/song_service"

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      #Images
      - name: Login to Amazon ECR
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com"

      - name: Create ECR repository for Auth Service
        run: |
          aws ecr describe-repositories --repository-names $AUTH_SERVICE_IMAGE || \
          aws ecr create-repository --repository-name $AUTH_SERVICE_IMAGE

      - name: Create ECR repository for Song Service
        run: |
          aws ecr describe-repositories --repository-names $SONG_SERVICE_IMAGE || \
          aws ecr create-repository --repository-name $SONG_SERVICE_IMAGE

      - name: Build, tag, and push Docker Auth image
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          AUTH_REPO_URI="$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$AUTH_SERVICE_IMAGE"
          docker build -t music_library -f ./backend/auth_service/aws.dockerfile ./backend/auth_service
          docker tag music_library:latest $AUTH_REPO_URI:latest
          docker push $AUTH_REPO_URI:latest

      - name: Build, tag, and push Docker Song image
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          SONG_REPO_URI="$AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$SONG_SERVICE_IMAGE"
          docker build -t music_library -f ./backend/song_service/aws.dockerfile ./backend/song_service
          docker tag music_library:latest $SONG_REPO_URI:latest
          docker push $SONG_REPO_URI:latest
